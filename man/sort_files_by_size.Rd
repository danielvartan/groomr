% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sort_files_by_size.R
\name{sort_files_by_size}
\alias{sort_files_by_size}
\title{Sort files based on their size}
\usage{
sort_files_by_size(files, decreasing = FALSE, root = NULL)
}
\arguments{
\item{files}{A \code{\link[base:character]{character}} vector of file paths.}

\item{decreasing}{(optional) A \code{\link[base:logical]{logical}} flag indicating
whether to sort the files in decreasing order of size (default: \code{FALSE}).}

\item{root}{(optional) A string specifying the root directory of the files.
If \code{NULL}, the function will treat the paths as absolute
(default: \code{NULL}).}
}
\value{
A \code{\link[base:character]{character}} vectors with the file paths
sorted by size.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

\code{sort_files_by_size()} sorts a vector of file paths based on their size.
It is useful for organizing files in a directory or for preparing files
for processing.
}
\examples{
library(fs)
library(readr)

files <- c("file1.txt", "file2.txt", "file3.txt", "file4.txt", "file5.txt")

dir <- tempfile("dir")
dir.create(dir)

for (i in files) {
  write_lines(rep(letters, sample(1000:10000, 1)), file.path(dir, i))
}

sizes <- file_size(file.path(dir, files)) |> as.character() |> trimws()
names(sizes) <- files
sizes

sort_files_by_size(files, root = dir)
}
\seealso{
Other file functions: 
\code{\link{identify_blank_line_neighbors}()},
\code{\link{normalize_hashtags}()},
\code{\link{normalize_names}()},
\code{\link{peek_csv_file}()},
\code{\link{remove_blank_line_dups}()},
\code{\link{replace_in_file}()},
\code{\link{split_file}()},
\code{\link{split_files_by_size}()},
\code{\link{zip_files_by_pattern}()}
}
\concept{file functions}
