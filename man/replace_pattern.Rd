% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/replace_pattern.R
\name{replace_pattern}
\alias{replace_pattern}
\title{Replace patterns inside files}
\usage{
replace_pattern(dir = utils::choose.dir(), pattern, replacement)
}
\arguments{
\item{dir}{(optional) a string indicating the directory of the files. This
function will look up just for files, directories will not be affected.
(default:: \code{utils::choose.dir()}).}

\item{pattern}{A string indicating the pattern to look for. The default
interpretation is a regular expression. This parameter will be used on
\code{\link[stringr:str_replace]{stringr::str_replace_all()}}.}

\item{replacement}{A string indicating the replacement value. This parameter
will be used on \code{\link[stringr:str_replace]{stringr::str_replace_all()}}.}
}
\value{
An invisible \code{NULL}. This function don't aim to return values.
}
\description{
\strong{ATTENTION}: Be careful, there is no coming back from the effects of
this function.

\code{replace_pattern()} search each line of a file and replace a specific pattern
when found.
}
\section{Tip}{


\if{html}{\out{<div class="sourceCode">}}\preformatted{replace_pattern(
  dir = normalizePath(readClipboard(), "/", mustWork = FALSE),
  pattern = "pattern",
  replacement = "pattern"
)
}\if{html}{\out{</div>}}
}

\examples{
file_name <- tempfile(tmpdir = tempfile())
dir_name <- dirname(file_name)
dir.create(dir_name)
file.create(file_name)

con <- file(file_name, "r+")
data <- c("01:00:56", "", "Test", "")
writeLines(data, con = con)
close(con)

replace_pattern(
  dir = dir_name,
  pattern = "([0-1][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]",
  replacement = ""
  )

con <- file(file_name, "r+")
readLines(con)
close(con)
}
\seealso{
Other string functions: 
\code{\link{split_by_pattern}()}
}
\concept{string functions}
