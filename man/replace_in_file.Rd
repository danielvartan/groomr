% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/replace_in_file.R
\name{replace_in_file}
\alias{replace_in_file}
\title{Replace patterns inside files}
\usage{
replace_in_file(file, pattern, replacement)
}
\arguments{
\item{file}{A \code{\link[base:character]{character}} vector specifying the
path(s) to the file(s) in which to perform the replacement.}

\item{pattern}{A \code{\link[base:character]{character}} vector specifying the
pattern(s) (regular expressions) to search for. If multiple patterns are
provided, each must correspond to a replacement of the same length.}

\item{replacement}{A \code{\link[base:character]{character}} vector specifying the
replacement value(s) to use. Each element is applied to the corresponding
pattern via \link[stringr:str_replace]{str_replace_all()}.}
}
\value{
An invisible \code{NULL}. This function is used for its side effect.
}
\description{
\code{replace_in_file()} searches each line of a file and replaces a specific
pattern when found.
}
\examples{
file <- tempfile()
file.create(file)

con <- file(file, "r+")
data <- c("01:00:56", "", "Test", "")
writeLines(data, con = con)
close(con)

replace_in_file(
  file = file,
  pattern = "([0-1][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]",
  replacement = ""
)

con <- file(file, "r+")
readLines(con)
close(con)
}
\seealso{
Other file functions: 
\code{\link{get_file_size}()},
\code{\link{identify_blank_line_neighbors}()},
\code{\link{normalize_hashtags}()},
\code{\link{normalize_names}()},
\code{\link{peek_csv_file}()},
\code{\link{remove_blank_line_dups}()},
\code{\link{sort_files_by_size}()},
\code{\link{split_file}()},
\code{\link{split_files_by_size}()},
\code{\link{zip_files_by_pattern}()}
}
\concept{file functions}
